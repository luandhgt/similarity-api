import faiss
import numpy as np
import json

def merge_faiss_vectors_with_mapping(output_file=None, save_mapping=True):
    """
    Merge vectors từ file sai vào file đúng và track mapping index
    
    Args:
        correct_file (str): File Faiss đúng (đích)
        wrong_file (str): File Faiss sai (nguồn)
        output_file (str): File output (nếu None thì overwrite correct_file)
        save_mapping (bool): Có lưu mapping vào file JSON không
    
    Returns:
        list: Danh sách mapping [{old_index, new_index}, ...]
    """
    correct_file = '/media/luanpc/Video/image-similarity-api/index/images/rise_of_kingdoms.bin' 
    wrong_file = '/media/luanpc/Video/image-similarity-api/index/images/rise_of_kingdoms_index.bin' 


    
    # Đọc file đúng (đích)
    print(f"Đang đọc file đúng: {correct_file}")
    correct_index = faiss.read_index(correct_file)
    print(f"File đúng - Số vectors hiện tại: {correct_index.ntotal}, Dimensions: {correct_index.d}")
    
    # Đọc file sai (nguồn)
    print(f"Đang đọc file sai: {wrong_file}")
    wrong_index = faiss.read_index(wrong_file)
    print(f"File sai - Số vectors: {wrong_index.ntotal}, Dimensions: {wrong_index.d}")
    
    # Kiểm tra dimensions có khớp không
    if correct_index.d != wrong_index.d:
        raise ValueError(f"Dimensions không khớp: {correct_index.d} vs {wrong_index.d}")
    
    # Lấy starting index cho vectors mới
    starting_new_index = correct_index.ntotal
    
    # Trích xuất vectors từ file sai
    print("Đang trích xuất vectors từ file sai...")
    vectors_to_add = np.zeros((wrong_index.ntotal, wrong_index.d), dtype=np.float32)
    
    # Reconstruct từng vector
    for i in range(wrong_index.ntotal):
        vectors_to_add[i] = wrong_index.reconstruct(i)
    
    print(f"Đã trích xuất {len(vectors_to_add)} vectors")
    
    # Tạo mapping list
    mapping_list = []
    
    # Add vectors vào index đúng và tạo mapping
    print("Đang merge vectors...")
    for old_idx in range(len(vectors_to_add)):
        new_idx = starting_new_index + old_idx
        
        # Add vector
        vector_to_add = vectors_to_add[old_idx:old_idx+1]  # Shape (1, d)
        correct_index.add(vector_to_add)
        
        # Tạo mapping
        mapping_entry = {
            "old_index": old_idx,
            "new_index": new_idx
        }
        mapping_list.append(mapping_entry)
        
        # In progress
        if (old_idx + 1) % 100 == 0 or old_idx == len(vectors_to_add) - 1:
            print(f"Đã merge {old_idx + 1}/{len(vectors_to_add)} vectors")
    
    # Lưu index đã merge
    output_path = output_file if output_file else correct_file
    print(f"Đang lưu index đã merge vào: {output_path}")
    faiss.write_index(correct_index, output_path)
    
    # In mapping results
    print("\n=== MAPPING RESULTS ===")
    for mapping in mapping_list:
        print(f"old_index:{mapping['old_index']} -> new_index:{mapping['new_index']}")
    
    print(f"\nTổng kết:")
    print(f"- Đã merge {len(vectors_to_add)} vectors")
    print(f"- Index range mới: {starting_new_index} -> {starting_new_index + len(vectors_to_add) - 1}")
    print(f"- Tổng vectors sau merge: {correct_index.ntotal}")
    
    # Lưu mapping vào file JSON
    if save_mapping:
        mapping_file = f"{correct_file.replace('.bin', '')}_mapping.json"
        with open(mapping_file, 'w', encoding='utf-8') as f:
            json.dump(mapping_list, f, indent=2, ensure_ascii=False)
        print(f"- Mapping đã lưu vào: {mapping_file}")
    
    return mapping_list

# Sử dụng
if __name__ == "__main__":
    # Thực hiện merge
    mapping_result = merge_faiss_vectors_with_mapping(
        output_file=None,  # Overwrite file gốc
        save_mapping=True   # Lưu mapping vào JSON
    )
    
    # In kết quả dạng list như yêu cầu
    print(f"\nMapping list: {mapping_result}")
